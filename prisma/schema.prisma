// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                 @id @default(autoincrement())
  name              String
  username          String              @unique
  password          String
  phonenumber       String              @unique
  bio               String
  status            String              @default("ACTIVE")
  posts             Post[]
  postsLiked        Post[]              @relation("PostLikes")
  messagesSent      Message[]           @relation(name: "SenderRelation")
  messagesReceived  Message[]           @relation(name: "RecipientRelatoin")
  notifications     Notification[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  NotificationToken NotificationToken[]
  followedBy        User[]              @relation("UserFollows")
  following         User[]              @relation("UserFollows")
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  body      String
  comments  Comment[]
  likes     Int       @default(0)
  likedBy   User[]    @relation("PostLikes")
  User      User?     @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Message   Message[]
}

model Message {
  id           Int      @id @default(autoincrement())
  read         Boolean  @default(false)
  body         String
  sender       User?    @relation(name: "SenderRelation", fields: [senderId], references: [id])
  senderId     Int?
  reciptient   User?    @relation(name: "RecipientRelatoin", fields: [reciptientId], references: [id])
  reciptientId Int?
  Post         Post?    @relation(fields: [postId], references: [id])
  postId       Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Comment {
  id     Int    @id @default(autoincrement())
  text   String
  userId Int
  Post   Post?  @relation(fields: [postId], references: [id])
  postId Int?
}

model NotificationToken {
  id                 Int            @id @default(autoincrement())
  user               User           @relation(fields: [userId], references: [id])
  userId             Int
  device_type        String
  notification_token String
  notifications      Notification[]
  status             String         @default("ACTIVE")
}

model Notification {
  id                  Int               @id @default(autoincrement())
  title               String
  body                String
  notificationToken   NotificationToken @relation(fields: [notificationTokenId], references: [id])
  notificationTokenId Int
  status              String            @default("ACTIVE")
  User                User?             @relation(fields: [userId], references: [id])
  userId              Int?
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
}
